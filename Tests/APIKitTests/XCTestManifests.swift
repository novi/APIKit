#if !canImport(ObjectiveC)
import XCTest

extension FormURLEncodedBodyParametersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FormURLEncodedBodyParametersTests = [
        ("testLongCJKString", testLongCJKString),
        ("testURLSuccess", testURLSuccess),
    ]
}

extension FormURLEncodedDataParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FormURLEncodedDataParserTests = [
        ("testInvalidString", testInvalidString),
        ("testURLAcceptHeader", testURLAcceptHeader),
        ("testURLSuccess", testURLSuccess),
    ]
}

extension JSONBodyParametersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONBodyParametersTests = [
        ("testJSONFailure", testJSONFailure),
        ("testJSONSuccess", testJSONSuccess),
    ]
}

extension JSONDataParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONDataParserTests = [
        ("testContentType", testContentType),
        ("testJSONSuccess", testJSONSuccess),
    ]
}

extension MultipartFormDataParametersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultipartFormDataParametersTests = [
        ("testDataEntitySuccess", testDataEntitySuccess),
        ("testDoubleValue", testDoubleValue),
        ("testInputStreamEntitySuccess", testInputStreamEntitySuccess),
        ("testIntValue", testIntValue),
        ("testStringValue", testStringValue),
    ]
}

extension ProtobufBodyParametersTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ProtobufBodyParametersTests = [
        ("testProtobufSuccess", testProtobufSuccess),
    ]
}

extension ProtobufDataParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ProtobufDataParserTests = [
        ("testContentType", testContentType),
        ("testProtobufSuccess", testProtobufSuccess),
    ]
}

extension RequestTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RequestTests = [
        ("testBuildURL", testBuildURL),
        ("testheaderFields", testheaderFields),
        ("testInterceptURLRequest", testInterceptURLRequest),
        ("testJapanesesQueryParameters", testJapanesesQueryParameters),
        ("testNullQueryParameters", testNullQueryParameters),
        ("testPOSTInvalidJSONRequest", testPOSTInvalidJSONRequest),
        ("testPOSTJSONRequest", testPOSTJSONRequest),
        ("testSymbolQueryParameters", testSymbolQueryParameters),
    ]
}

extension SessionCallbackQueueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SessionCallbackQueueTests = [
        ("testDispatchQueue", testDispatchQueue),
        ("testExplicitSessionCallbackQueue", testExplicitSessionCallbackQueue),
        ("testImplicitSessionCallbackQueue", testImplicitSessionCallbackQueue),
        ("testMain", testMain),
        ("testOperationQueue", testOperationQueue),
        ("testSessionQueue", testSessionQueue),
    ]
}

extension SessionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SessionTests = [
        ("testCancel", testCancel),
        ("testCancelFilter", testCancelFilter),
        ("testCancelOtherRequest", testCancelOtherRequest),
        ("testNonHTTPURLResponseError", testNonHTTPURLResponseError),
        ("testParseDataError", testParseDataError),
        ("testRequestError", testRequestError),
        ("testSharedSession", testSharedSession),
        ("testSubclassClassMethods", testSubclassClassMethods),
        ("testSuccess", testSuccess),
        ("testUnacceptableStatusCodeError", testUnacceptableStatusCodeError),
    ]
}

extension StringDataParserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringDataParserTests = [
        ("testAcceptHeader", testAcceptHeader),
        ("testInvalidString", testInvalidString),
        ("testParseData", testParseData),
    ]
}

extension URLEncodedSerializationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__URLEncodedSerializationTests = [
        ("testDataFromObject", testDataFromObject),
        ("testInvalidFormatString", testInvalidFormatString),
        ("testInvalidString", testInvalidString),
        ("testNonDictionaryObject", testNonDictionaryObject),
        ("testObjectFromData", testObjectFromData),
    ]
}

extension URLSessionAdapterSubclassTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__URLSessionAdapterSubclassTests = [
        ("testDelegateMethodCall", testDelegateMethodCall),
    ]
}

extension URLSessionAdapterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__URLSessionAdapterTests = [
        ("testCancel", testCancel),
        ("testConnectionError", testConnectionError),
        ("testSuccess", testSuccess),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(FormURLEncodedBodyParametersTests.__allTests__FormURLEncodedBodyParametersTests),
        testCase(FormURLEncodedDataParserTests.__allTests__FormURLEncodedDataParserTests),
        testCase(JSONBodyParametersTests.__allTests__JSONBodyParametersTests),
        testCase(JSONDataParserTests.__allTests__JSONDataParserTests),
        testCase(MultipartFormDataParametersTests.__allTests__MultipartFormDataParametersTests),
        testCase(ProtobufBodyParametersTests.__allTests__ProtobufBodyParametersTests),
        testCase(ProtobufDataParserTests.__allTests__ProtobufDataParserTests),
        testCase(RequestTests.__allTests__RequestTests),
        testCase(SessionCallbackQueueTests.__allTests__SessionCallbackQueueTests),
        testCase(SessionTests.__allTests__SessionTests),
        testCase(StringDataParserTests.__allTests__StringDataParserTests),
        testCase(URLEncodedSerializationTests.__allTests__URLEncodedSerializationTests),
        testCase(URLSessionAdapterSubclassTests.__allTests__URLSessionAdapterSubclassTests),
        testCase(URLSessionAdapterTests.__allTests__URLSessionAdapterTests),
    ]
}
#endif
